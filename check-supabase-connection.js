/**
 * Herramienta de diagn√≥stico para verificar la conexi√≥n con Supabase
 * Este script puede ejecutarse de manera independiente para comprobar
 * si hay acceso a Supabase desde el entorno donde se ejecuta.
 */

const axios = require('axios');
const { createClient } = require('@supabase/supabase-js');
const dotenv = require('dotenv');

// Cargar variables de entorno
dotenv.config();

// Configuraci√≥n de Supabase
const SUPABASE_URL = process.env.SUPABASE_URL || '';
const SUPABASE_KEY = process.env.SUPABASE_KEY || '';

// Informaci√≥n del sistema
console.log('üìä DIAGN√ìSTICO DE CONEXI√ìN A SUPABASE');
console.log(`üîó URL: ${SUPABASE_URL ? SUPABASE_URL : 'No configurada'}`);
console.log(`üîë Key: ${SUPABASE_KEY ? '********' : 'No configurada'}`);

// Verificar variables de entorno
if (!SUPABASE_URL || !SUPABASE_KEY) {
  console.error('‚ùå ERROR: Variables de entorno SUPABASE_URL y/o SUPABASE_KEY no configuradas');
  console.log('üëâ Por favor, configura estas variables en tu archivo .env o en el panel de Render');
  process.exit(1);
}

// Inicializar cliente de Supabase
const supabase = createClient(SUPABASE_URL, SUPABASE_KEY);

// Funci√≥n principal para verificar la conexi√≥n
async function checkConnection() {
  try {
    console.log('üîç Verificando conexi√≥n con Supabase...');
    
    // Intentar recuperar datos de una tabla llamada 'messages'
    const { data, error } = await supabase
      .from('messages')
      .select('id')
      .limit(1);
    
    if (error) {
      throw error;
    }
    
    console.log('‚úÖ Conexi√≥n exitosa con Supabase');
    console.log(`üìù Datos de muestra: ${JSON.stringify(data)}`);
    
    // Verificar tablas existentes
    await checkTables();
    
  } catch (error) {
    console.error(`‚ùå Error al conectar con Supabase: ${error.message}`);
    
    if (error.message.includes('authentication failed')) {
      console.log('üëâ La clave de Supabase parece ser incorrecta');
    } else if (error.message.includes('network error')) {
      console.log('üëâ No se pudo conectar a Supabase. Verifica tu conexi√≥n a internet.');
    } else if (error.message.includes('relation "messages" does not exist')) {
      console.log('üëâ La tabla "messages" no existe. Verifica el nombre o crea la tabla.');
      await listTables();
    } else {
      console.log('üëâ Revisa la URL de Supabase y aseg√∫rate de que el proyecto est√© activo');
    }
    
    process.exit(1);
  }
}

// Funci√≥n para verificar tablas existentes
async function checkTables() {
  try {
    console.log('üîç Verificando tablas en Supabase...');
    
    // Obtener lista de tablas usando la API REST de Supabase
    const { data, error } = await supabase.rpc('list_tables');
    
    if (error) {
      console.error(`‚ùå Error al listar tablas: ${error.message}`);
      return;
    }
    
    if (data && data.length > 0) {
      console.log('üìã Tablas existentes:');
      data.forEach(table => console.log(`  - ${table}`));
      
      // Verificar tablas necesarias
      const requiredTables = ['messages', 'conversations'];
      const missingTables = requiredTables.filter(table => !data.includes(table));
      
      if (missingTables.length > 0) {
        console.warn('‚ö†Ô∏è Faltan tablas necesarias:');
        missingTables.forEach(table => console.log(`  - ${table}`));
      } else {
        console.log('‚úÖ Todas las tablas necesarias est√°n presentes');
      }
    } else {
      console.log('‚ùå No se encontraron tablas en la base de datos');
    }
  } catch (error) {
    console.error(`‚ùå Error al verificar tablas: ${error.message}`);
  }
}

// Funci√≥n para listar tablas
async function listTables() {
  try {
    console.log('üîç Intentando listar tablas disponibles...');
    
    // Usar una funci√≥n RPC definida en Supabase para listar tablas
    const { data, error } = await supabase.rpc('list_tables');
    
    if (error) {
      if (error.message.includes('function "list_tables" does not exist')) {
        console.log('üëâ La funci√≥n "list_tables" no est√° definida en Supabase');
        console.log('üëâ Puedes crear tablas desde el panel de Supabase o mediante SQL');
      } else {
        console.error(`‚ùå Error al listar tablas: ${error.message}`);
      }
      return;
    }
    
    if (data && data.length > 0) {
      console.log('üìã Tablas existentes:');
      data.forEach(table => console.log(`  - ${table}`));
    } else {
      console.log('‚ùå No se encontraron tablas en la base de datos');
    }
  } catch (error) {
    console.error(`‚ùå Error al listar tablas: ${error.message}`);
  }
}

// Ejecutar verificaci√≥n
checkConnection(); 